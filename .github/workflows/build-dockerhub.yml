name: Docker Build ‚öì

on:
  release:
    types: [created]

jobs:
  # Single job now to build Docker Image, run GHC unit tests, and push to DockerHub
  build_push:
    name: Docker Build Publish

    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - jmeter-version: "5.5"
            with-plugins: "false"
            suffix: ""
            suffix2: "-11-jre"
            jvm-version: "11-jre-alpine"
            folder: "."
            jmeter-branch: 5.5
            tags-latest: "latest"

          - jmeter-version: "5.5"
            with-plugins: "true"
            suffix: "-plugins"
            suffix2: "-11-jre"
            jvm-version: "11-jre-alpine"
            folder: "."
            jmeter-branch: 5.5
            tags-latest: "latest"

          - jmeter-version: "5.5"
            with-plugins: "false"
            suffix: "-11-jdk"
            suffix2: ""
            jvm-version: "11-jdk-alpine"
            folder: "."
            jmeter-branch: 5.5
            tags-latest: "latest"

          - jmeter-version: "5.5"
            with-plugins: "true"
            suffix: "-plugins-11-jdk"
            suffix2: ""
            jvm-version: "11-jdk-alpine"
            folder: "."
            jmeter-branch: 5.5
            tags-latest: "latest"

          - jmeter-version: "5.4.3"
            with-plugins: "false"
            suffix: ""
            suffix2: "-11-jre"
            jvm-version: "11-jre-alpine"
            folder: "."
            jmeter-branch: 5.4
            tags-latest: "latest"

          - jmeter-version: "5.4.3"
            with-plugins: "true"
            suffix: "-plugins"
            suffix2: "-11-jre"
            jvm-version: "11-jre-alpine"
            folder: "."
            jmeter-branch: 5.4
            tags-latest: "latest"

          - jmeter-version: "5.4.3"
            with-plugins: "false"
            suffix: "-11-jdk"
            suffix2: ""
            jvm-version: "11-jdk-alpine"
            folder: "."
            jmeter-branch: 5.4
            tags-latest: "latest"

          - jmeter-version: "5.4.3"
            with-plugins: "true"
            suffix: "-plugins-11-jdk"
            suffix2: ""
            jvm-version: "11-jdk-alpine"
            folder: "."
            jmeter-branch: 5.4
            tags-latest: "latest"

    # v2 https://github.com/docker/build-push-action/blob/v2/UPGRADE.md
    steps:
      - name: Checkout ‚úÖ
        uses: actions/checkout@v3

      - name: Chmod x
        run: |
          chmod +x -R ./scripts

      - name: Config üì¶
        run: |
          echo jmeter-branch=${{ matrix.jmeter-branch }}
          echo jvm-version=${{ matrix.jvm-version }}
          echo jmeter-version=${{ matrix.jmeter-version }}
          echo folder=${{ matrix.folder }}
          echo tags-latest=${{ matrix.tags-latest }}
          echo with-plugins=${{ matrix.with-plugins }}

      - name: Prepare üì¶
        id: prep
        run: |
          DOCKER_IMAGE=kamalyes/jmeter
          VERSION="${{ matrix.jmeter-version }}"
          echo ::set-output name=image::${DOCKER_IMAGE}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Show Image Settings üì¶
        run: echo "IMAGE=${{ steps.prep.outputs.image }} VERSION=${{ steps.prep.outputs.version }} TAGS=${{ steps.prep.outputs.tags }}"

      - name: Set up Docker Buildx üì¶
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Docker Build only - retain local Image üì¶
        id: build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ matrix.folder }}/Dockerfile-base
          load: true
          push: false
          build-args: |
            JMETER_VERSION=${{ matrix.jmeter-version }}
            WITH_BASE_PLUGINS=${{ matrix.with-plugins }}
            JVM_VERSION=${{ matrix.jvm-version }}

          tags: |
            ${{ steps.prep.outputs.image }}:${{ matrix.jmeter-version }}${{ matrix.suffix }}
            ${{ steps.prep.outputs.image }}:${{ matrix.jmeter-version }}${{ matrix.suffix }}${{ matrix.suffix2 }}
            ${{ steps.prep.outputs.image }}:${{ matrix.jmeter-branch }}${{ matrix.suffix }}
            ${{ steps.prep.outputs.image }}:${{ matrix.jmeter-branch }}${{ matrix.suffix }}${{ matrix.suffix2 }}
            ${{ steps.prep.outputs.image }}:${{ matrix.tags-latest }}${{ matrix.suffix }}
            
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ github.sha }}

      - name: Result üì¶
        id: result
        run: |
          echo ::set-output name=currentImage::${{ steps.prep.outputs.image }}:${{ matrix.jmeter-branch }}${{ matrix.suffix }}

      # Publish on v2
      - name: Login to DockerHub üì¶
        # if: ${{ github.ref_name == 'v2' }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker repo (on Push only) ‚òÅÔ∏è
        # if: ${{ github.ref_name == 'v2' }}
        run: docker image push --all-tags ${{ steps.prep.outputs.image }}
